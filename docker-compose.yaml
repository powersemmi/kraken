version: "3.10"

networks:
  shared: { }

services:
  api:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks: [ shared ]
    ports:
      - "8000:8000"
    command:
      bash -c "python -m alembic upgrade head && python -m kraken run-server"
    env_file:
      - .env
    environment:
      PG_DSN: postgresql+asyncpg://postgres:postgres@postgres:5432/app
      RMQ_URL: amqp://user:user@rabbitmq:5672

  postgres:
    image: postgres:16-alpine
    hostname: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d app" ]
      interval: 2s
      timeout: 1s
      retries: 5
    environment:
      POSTGRES_DB: app
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      TZ: Europe/Moscow
      PGTZ: Europe/Moscow
    networks: [ shared ]
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    hostname: rabbitmq
    restart: always
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 2s
      timeout: 1s
      retries: 5
    networks: [ shared ]
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=user
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"

volumes:
  postgres-data:
  rabbitmq-data: